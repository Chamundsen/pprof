<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: wordcount03 Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1032)">
<title>wordcount03</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1032 974.5,-1032 974.5,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-869 8,-1020 534,-1020 534,-869 8,-869"/>
</g>
<!-- File: wordcount03 -->
<g id="node1" class="node">
<title>File: wordcount03</title>
<g id="a_node1"><a xlink:title="wordcount03">
<polygon fill="#f8f8f8" stroke="black" points="525.5,-1012 16.5,-1012 16.5,-877 525.5,-877 525.5,-1012"/>
<text text-anchor="start" x="24.5" y="-995.2" font-family="Times,serif" font-size="16.00">File: wordcount03</text>
<text text-anchor="start" x="24.5" y="-977.2" font-family="Times,serif" font-size="16.00">Type: cpu</text>
<text text-anchor="start" x="24.5" y="-959.2" font-family="Times,serif" font-size="16.00">Time: Mar 10, 2023 at 11:00am (UTC)</text>
<text text-anchor="start" x="24.5" y="-941.2" font-family="Times,serif" font-size="16.00">Duration: 319.61ms, Total samples = 170ms (53.19%)</text>
<text text-anchor="start" x="24.5" y="-923.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 170ms, 100% of 170ms total</text>
<text text-anchor="start" x="24.5" y="-886.2" font-family="Times,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="main.main (160ms)">
<polygon fill="#edd5d5" stroke="#b20300" points="703.5,-826 484.5,-826 484.5,-726 703.5,-726 703.5,-826"/>
<text text-anchor="middle" x="594" y="-805.2" font-family="Times,serif" font-size="21.00">main</text>
<text text-anchor="middle" x="594" y="-782.2" font-family="Times,serif" font-size="21.00">main</text>
<text text-anchor="middle" x="594" y="-759.2" font-family="Times,serif" font-size="21.00">40ms (23.53%)</text>
<text text-anchor="middle" x="594" y="-736.2" font-family="Times,serif" font-size="21.00">of 160ms (94.12%)</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="main.readbyte (100ms)">
<polygon fill="#edd8d5" stroke="#b21a00" points="682.5,-675 505.5,-675 505.5,-591 682.5,-591 682.5,-675"/>
<text text-anchor="middle" x="594" y="-657.4" font-family="Times,serif" font-size="17.00">main</text>
<text text-anchor="middle" x="594" y="-638.4" font-family="Times,serif" font-size="17.00">readbyte</text>
<text text-anchor="middle" x="594" y="-619.4" font-family="Times,serif" font-size="17.00">20ms (11.76%)</text>
<text text-anchor="middle" x="594" y="-600.4" font-family="Times,serif" font-size="17.00">of 100ms (58.82%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N4 -->
<g id="edge2" class="edge">
<title>N1&#45;&gt;N4</title>
<g id="a_edge2"><a xlink:title="main.main &#45;&gt; main.readbyte (100ms)">
<path fill="none" stroke="#b21a00" stroke-width="3" d="M594,-725.69C594,-712.65 594,-698.55 594,-685.41"/>
<polygon fill="#b21a00" stroke="#b21a00" stroke-width="3" points="597.5,-685.11 594,-675.11 590.5,-685.11 597.5,-685.11"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="main.main &#45;&gt; main.readbyte (100ms)">
<text text-anchor="middle" x="620.5" y="-696.8" font-family="Times,serif" font-size="14.00"> 100ms</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="unicode.IsSpace (20ms)">
<polygon fill="#ede5df" stroke="#b27b49" points="845.5,-665.5 700.5,-665.5 700.5,-600.5 845.5,-600.5 845.5,-665.5"/>
<text text-anchor="middle" x="773" y="-647.9" font-family="Times,serif" font-size="17.00">unicode</text>
<text text-anchor="middle" x="773" y="-628.9" font-family="Times,serif" font-size="17.00">IsSpace</text>
<text text-anchor="middle" x="773" y="-609.9" font-family="Times,serif" font-size="17.00">20ms (11.76%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N5 -->
<g id="edge4" class="edge">
<title>N1&#45;&gt;N5</title>
<g id="a_edge4"><a xlink:title="main.main &#45;&gt; unicode.IsSpace (20ms)">
<path fill="none" stroke="#b27b49" d="M656.35,-725.88C678.9,-708.12 703.98,-688.36 725.1,-671.73"/>
<polygon fill="#b27b49" stroke="#b27b49" points="727.29,-674.46 732.98,-665.52 722.96,-668.96 727.29,-674.46"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="main.main &#45;&gt; unicode.IsSpace (20ms)">
<text text-anchor="middle" x="716" y="-696.8" font-family="Times,serif" font-size="14.00"> 20ms</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="runtime.main (160ms)">
<polygon fill="#edd5d5" stroke="#b20300" points="644,-962.5 544,-962.5 544,-926.5 644,-926.5 644,-962.5"/>
<text text-anchor="middle" x="594" y="-951.6" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="594" y="-942.6" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="594" y="-933.6" font-family="Times,serif" font-size="8.00">0 of 160ms (94.12%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N1 -->
<g id="edge1" class="edge">
<title>N2&#45;&gt;N1</title>
<g id="a_edge1"><a xlink:title="runtime.main &#45;&gt; main.main (160ms)">
<path fill="none" stroke="#b20300" stroke-width="5" d="M594,-926.31C594,-905.17 594,-868.16 594,-836.28"/>
<polygon fill="#b20300" stroke="#b20300" stroke-width="5" points="598.38,-836.14 594,-826.14 589.63,-836.14 598.38,-836.14"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="runtime.main &#45;&gt; main.main (160ms)">
<text text-anchor="middle" x="620.5" y="-847.8" font-family="Times,serif" font-size="14.00"> 160ms</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="bufio.(*Reader).Read (80ms)">
<polygon fill="#eddad5" stroke="#b22400" points="707.5,-540 480.5,-540 480.5,-402 707.5,-402 707.5,-540"/>
<text text-anchor="middle" x="594" y="-516.8" font-family="Times,serif" font-size="24.00">bufio</text>
<text text-anchor="middle" x="594" y="-490.8" font-family="Times,serif" font-size="24.00">(*Reader)</text>
<text text-anchor="middle" x="594" y="-464.8" font-family="Times,serif" font-size="24.00">Read</text>
<text text-anchor="middle" x="594" y="-438.8" font-family="Times,serif" font-size="24.00">70ms (41.18%)</text>
<text text-anchor="middle" x="594" y="-412.8" font-family="Times,serif" font-size="24.00">of 80ms (47.06%)</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node">
<title>N7</title>
<g id="a_node7"><a xlink:title="runtime.memmove (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="655,-351 533,-351 533,-292 655,-292 655,-351"/>
<text text-anchor="middle" x="594" y="-335" font-family="Times,serif" font-size="15.00">runtime</text>
<text text-anchor="middle" x="594" y="-318" font-family="Times,serif" font-size="15.00">memmove</text>
<text text-anchor="middle" x="594" y="-301" font-family="Times,serif" font-size="15.00">10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N7 -->
<g id="edge5" class="edge">
<title>N3&#45;&gt;N7</title>
<g id="a_edge5"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.memmove (10ms)">
<path fill="none" stroke="#b29c7e" d="M594,-401.86C594,-387.95 594,-373.76 594,-361.3"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="597.5,-361.29 594,-351.29 590.5,-361.29 597.5,-361.29"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="bufio.(*Reader).Read &#45;&gt; runtime.memmove (10ms)">
<text text-anchor="middle" x="616" y="-372.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N3 -->
<g id="edge3" class="edge">
<title>N4&#45;&gt;N3</title>
<g id="a_edge3"><a xlink:title="main.readbyte &#45;&gt; bufio.(*Reader).Read (80ms)">
<path fill="none" stroke="#b22400" stroke-width="3" d="M594,-590.8C594,-578.35 594,-564.26 594,-550.24"/>
<polygon fill="#b22400" stroke="#b22400" stroke-width="3" points="597.5,-550.06 594,-540.06 590.5,-550.06 597.5,-550.06"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="main.readbyte &#45;&gt; bufio.(*Reader).Read (80ms)">
<text text-anchor="middle" x="616" y="-561.8" font-family="Times,serif" font-size="14.00"> 80ms</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="runtime.asyncPreempt (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="970.5,-59 845.5,-59 845.5,0 970.5,0 970.5,-59"/>
<text text-anchor="middle" x="908" y="-43" font-family="Times,serif" font-size="15.00">runtime</text>
<text text-anchor="middle" x="908" y="-26" font-family="Times,serif" font-size="15.00">asyncPreempt</text>
<text text-anchor="middle" x="908" y="-9" font-family="Times,serif" font-size="15.00">10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node">
<title>N8</title>
<g id="a_node8"><a xlink:title="runtime/pprof.profileWriter (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="952.5,-962.5 863.5,-962.5 863.5,-926.5 952.5,-926.5 952.5,-962.5"/>
<text text-anchor="middle" x="908" y="-951.6" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="908" y="-942.6" font-family="Times,serif" font-size="8.00">profileWriter</text>
<text text-anchor="middle" x="908" y="-933.6" font-family="Times,serif" font-size="8.00">0 of 10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N13 -->
<g id="node13" class="node">
<title>N13</title>
<g id="a_node13"><a xlink:title="runtime/pprof.newProfileBuilder (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="952.5,-794 863.5,-794 863.5,-758 952.5,-758 952.5,-794"/>
<text text-anchor="middle" x="908" y="-783.1" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="908" y="-774.1" font-family="Times,serif" font-size="8.00">newProfileBuilder</text>
<text text-anchor="middle" x="908" y="-765.1" font-family="Times,serif" font-size="8.00">0 of 10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N13 -->
<g id="edge12" class="edge">
<title>N8&#45;&gt;N13</title>
<g id="a_edge12"><a xlink:title="runtime/pprof.profileWriter &#45;&gt; runtime/pprof.newProfileBuilder (10ms)">
<path fill="none" stroke="#b29c7e" d="M908,-926.31C908,-897.52 908,-839.31 908,-804.69"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="911.5,-804.35 908,-794.35 904.5,-804.35 911.5,-804.35"/>
</a>
</g>
<g id="a_edge12&#45;label"><a xlink:title="runtime/pprof.profileWriter &#45;&gt; runtime/pprof.newProfileBuilder (10ms)">
<text text-anchor="middle" x="930" y="-847.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node9" class="node">
<title>N9</title>
<g id="a_node9"><a xlink:title="fmt.(*pp).doPrintf (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="952.5,-154 863.5,-154 863.5,-110 952.5,-110 952.5,-154"/>
<text text-anchor="middle" x="908" y="-143.6" font-family="Times,serif" font-size="8.00">fmt</text>
<text text-anchor="middle" x="908" y="-134.6" font-family="Times,serif" font-size="8.00">(*pp)</text>
<text text-anchor="middle" x="908" y="-125.6" font-family="Times,serif" font-size="8.00">doPrintf</text>
<text text-anchor="middle" x="908" y="-116.6" font-family="Times,serif" font-size="8.00">0 of 10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N6 -->
<g id="edge6" class="edge">
<title>N9&#45;&gt;N6</title>
<g id="a_edge6"><a xlink:title="fmt.(*pp).doPrintf &#45;&gt; runtime.asyncPreempt (10ms)">
<path fill="none" stroke="#b29c7e" d="M908,-109.69C908,-97.93 908,-82.97 908,-69.23"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="911.5,-69.03 908,-59.03 904.5,-69.03 911.5,-69.03"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="fmt.(*pp).doPrintf &#45;&gt; runtime.asyncPreempt (10ms)">
<text text-anchor="middle" x="930" y="-80.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node10" class="node">
<title>N10</title>
<g id="a_node10"><a xlink:title="fmt.Sprintf (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="952.5,-241 863.5,-241 863.5,-205 952.5,-205 952.5,-241"/>
<text text-anchor="middle" x="908" y="-230.1" font-family="Times,serif" font-size="8.00">fmt</text>
<text text-anchor="middle" x="908" y="-221.1" font-family="Times,serif" font-size="8.00">Sprintf</text>
<text text-anchor="middle" x="908" y="-212.1" font-family="Times,serif" font-size="8.00">0 of 10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N9 -->
<g id="edge7" class="edge">
<title>N10&#45;&gt;N9</title>
<g id="a_edge7"><a xlink:title="fmt.Sprintf &#45;&gt; fmt.(*pp).doPrintf (10ms)">
<path fill="none" stroke="#b29c7e" d="M908,-204.84C908,-193.44 908,-178.13 908,-164.58"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="911.5,-164.19 908,-154.19 904.5,-164.19 911.5,-164.19"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="fmt.Sprintf &#45;&gt; fmt.(*pp).doPrintf (10ms)">
<text text-anchor="middle" x="930" y="-175.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node11" class="node">
<title>N11</title>
<g id="a_node11"><a xlink:title="runtime/pprof.(*profileBuilder).readMapping (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="952.5,-655 863.5,-655 863.5,-611 952.5,-611 952.5,-655"/>
<text text-anchor="middle" x="908" y="-644.6" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="908" y="-635.6" font-family="Times,serif" font-size="8.00">(*profileBuilder)</text>
<text text-anchor="middle" x="908" y="-626.6" font-family="Times,serif" font-size="8.00">readMapping</text>
<text text-anchor="middle" x="908" y="-617.6" font-family="Times,serif" font-size="8.00">0 of 10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N14 -->
<g id="node14" class="node">
<title>N14</title>
<g id="a_node14"><a xlink:title="runtime/pprof.parseProcSelfMaps (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="954.5,-489 861.5,-489 861.5,-453 954.5,-453 954.5,-489"/>
<text text-anchor="middle" x="908" y="-478.1" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="908" y="-469.1" font-family="Times,serif" font-size="8.00">parseProcSelfMaps</text>
<text text-anchor="middle" x="908" y="-460.1" font-family="Times,serif" font-size="8.00">0 of 10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N14 -->
<g id="edge8" class="edge">
<title>N11&#45;&gt;N14</title>
<g id="a_edge8"><a xlink:title="runtime/pprof.(*profileBuilder).readMapping &#45;&gt; runtime/pprof.parseProcSelfMaps (10ms)">
<path fill="none" stroke="#b29c7e" d="M908,-610.75C908,-582.16 908,-531.26 908,-499.69"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="911.5,-499.4 908,-489.4 904.5,-499.4 911.5,-499.4"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="runtime/pprof.(*profileBuilder).readMapping &#45;&gt; runtime/pprof.parseProcSelfMaps (10ms)">
<text text-anchor="middle" x="930" y="-561.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node12" class="node">
<title>N12</title>
<g id="a_node12"><a xlink:title="runtime/pprof.elfBuildID (10ms)">
<polygon fill="#edeae6" stroke="#b29c7e" points="952.5,-339.5 863.5,-339.5 863.5,-303.5 952.5,-303.5 952.5,-339.5"/>
<text text-anchor="middle" x="908" y="-328.6" font-family="Times,serif" font-size="8.00">pprof</text>
<text text-anchor="middle" x="908" y="-319.6" font-family="Times,serif" font-size="8.00">elfBuildID</text>
<text text-anchor="middle" x="908" y="-310.6" font-family="Times,serif" font-size="8.00">0 of 10ms (5.88%)</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N10 -->
<g id="edge9" class="edge">
<title>N12&#45;&gt;N10</title>
<g id="a_edge9"><a xlink:title="runtime/pprof.elfBuildID &#45;&gt; fmt.Sprintf (10ms)">
<path fill="none" stroke="#b29c7e" d="M908,-303.25C908,-288.84 908,-268.03 908,-251.36"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="911.5,-251.1 908,-241.1 904.5,-251.1 911.5,-251.1"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="runtime/pprof.elfBuildID &#45;&gt; fmt.Sprintf (10ms)">
<text text-anchor="middle" x="930" y="-262.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N13&#45;&gt;N11 -->
<g id="edge10" class="edge">
<title>N13&#45;&gt;N11</title>
<g id="a_edge10"><a xlink:title="runtime/pprof.newProfileBuilder &#45;&gt; runtime/pprof.(*profileBuilder).readMapping (10ms)">
<path fill="none" stroke="#b29c7e" d="M908,-757.99C908,-735.13 908,-694.06 908,-665.48"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="911.5,-665.2 908,-655.2 904.5,-665.2 911.5,-665.2"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="runtime/pprof.newProfileBuilder &#45;&gt; runtime/pprof.(*profileBuilder).readMapping (10ms)">
<text text-anchor="middle" x="930" y="-696.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N14&#45;&gt;N12 -->
<g id="edge11" class="edge">
<title>N14&#45;&gt;N12</title>
<g id="a_edge11"><a xlink:title="runtime/pprof.parseProcSelfMaps &#45;&gt; runtime/pprof.elfBuildID (10ms)">
<path fill="none" stroke="#b29c7e" d="M908,-452.79C908,-427.48 908,-379.96 908,-349.84"/>
<polygon fill="#b29c7e" stroke="#b29c7e" points="911.5,-349.6 908,-339.6 904.5,-349.6 911.5,-349.6"/>
</a>
</g>
<g id="a_edge11&#45;label"><a xlink:title="runtime/pprof.parseProcSelfMaps &#45;&gt; runtime/pprof.elfBuildID (10ms)">
<text text-anchor="middle" x="930" y="-372.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
</g>
</g></svg>
